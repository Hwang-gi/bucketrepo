on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

name: AWS ECR push & deploy k8s

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
      # GitHub에 저장된 코드를 CI 서버로 내려받아 뒷 단계에서 사용할 수 있도록 하는 과정
      - name: Checkout
        uses: actions/checkout@v3

      # GitHub Secrets과 로컬 환경에 저장된 값 불러오기
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}   # secret에 저장된 값 불러오기
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Build Nginx Docker image
        run: |
          cd nginx
          docker build -t nginxtest .  # Nginx Docker 이미지 빌드

      - name: Build Tomcat Docker image
        run: |
          cd Tomcat
          docker build -t tomcattest .  # Tomcat Docker 이미지 빌드

      - name: Log in to Amazon ECR
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: 'ap-northeast-2'
        run: |
          $(aws ecr get-login --no-include-email --region $AWS_REGION)

      - name: Tag and Push Nginx image to ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: testecr
          IMAGE_TAG: ${{ github.run_number }}
        run: |
          docker tag nginxtest $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "Pushing image to ECR..."
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Tag and Push Tomcat image to ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: testecr
          IMAGE_TAG: ${{ github.run_number }}
        run: |
          docker tag tomcattest $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "Pushing image to ECR..."
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
      
      # kustomize 명령을 가져온다.
      - name: Setup Kustomize
        uses: imranismail/setup-kustomize@v1

      - name: Checkout kustomize repository
        uses: actions/checkout@v2
        with:
          # kubernetes 설정정보 저장소
          repository: DGU2023xcapstone-parcel/exqress-kubernetes # k8s yaml 파일이 있는 repo
          ref: main # branch 이름
          # 다른 저장소에 push 하려면 Personal Access Token이 필요.
          token: ${{ secrets.ACTION_TOKEN }}
          path: exqress-kubernetes # 최상위 경로로 repository와 동일하게 설정
